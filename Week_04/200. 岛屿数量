class Solution {
    public int numIslands(char[][] grid) {
        int rowSize = grid.length;
        if (rowSize < 1) return 0;
        int colSize = grid[0].length;

        int iNum = 0;
        for (int row = 0; row < rowSize; row++){
            for (int col = 0; col < colSize; col++){
                if (grid[row][col] == '1'){
                    iNum++;
                    dfs(grid, row, col);
                }
            }
        }
        return iNum;
    }

    public void dfs(char[][] grid, int row, int col){
        int rowSize = grid.length;
        int colSize = grid[0].length;
        if (row < 0 || col < 0 || row >= rowSize || col >= colSize || grid[row][col] == '0') return;

        grid[row][col] = '0';
        dfs(grid, row-1, col);
        dfs(grid, row+1, col);
        dfs(grid, row, col-1);
        dfs(grid, row, col+1);
    }
}