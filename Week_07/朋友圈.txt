class Solution {
    private int[] parent;
    private int count;
    public int findCircleNum(int[][] M) {
        if (M == null || M.length == 0) return 0;
        int n = M.length;
        parent = new int[n];
        for (int i = 0; i < n; i++) {
            parent[i] = i;
        }
        count = n;

        for (int i = 0; i < n; i++) {
            for (int j = i+1; j < n; j++) {
                if (i != j && M[i][j] == 1) {
                    uniq(i, j);
                }
            }
        }
        return count;
    }

    private int find(int n) {
        while (parent[n] != n) {
            parent[n] = parent[parent[n]];
            n = parent[n];
        }
        return n;
    }

    private void uniq(int p, int q) {
        int rootP = find(p);
        int rootQ = find(q);
        if (rootP == rootQ) return;
        parent[rootQ] = rootP;
        count--;
    }
}